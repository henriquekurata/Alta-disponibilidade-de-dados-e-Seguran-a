**********Alta disponibilidade em Streaming de dados transacionais**********

- Ferramentas:

- Passos:
#INSTALAR BANCO DE DADOS ORACLE
1- Gerar VM com Red Hat Enterprise Linux;
2- Instalar o banco de dados Oracle (Oracle delivery);
3- 

- Comandos:
# Instalação do Oracle 12c no Red Hat Enterprise Linux

# Atualização do SO
Atualizar a lista de sudoers: vi /etc/sudoers (Para adicionar o usuário aluno a permissões no sistema)
Fazer a subinscrição do sistema Red Hat (Válido por 1 ano)
sudo yum update -y

# Instalação de Pacotes
sudo yum install -y binutils.x86_64 compat-libcap1.x86_64 gcc.x86_64 gcc-c++.x86_64 glibc.i686 glibc.x86_64 glibc-devel.i686 glibc-devel.x86_64 ksh compat-libstdc++-33 libaio.i686 libaio.x86_64 libaio-devel.i686 libaio-devel.x86_64 libgcc.i686 libgcc.x86_64 libstdc++.i686 libstdc++.x86_64 libstdc++-devel.i686 libstdc++-devel.x86_64 libXi.i686 libXi.x86_64 libXtst.i686 libXtst.x86_64 make.x86_64 sysstat.x86_64 zip unzip

# Criação de grupos de usuários para o Oracle
sudo groupadd oinstall
sudo groupadd dba
sudo useradd -g oinstall -G dba oracle
sudo passwd oracle

# Adicionar os parâmetros abaixo ao arquivo /etc/sysctl.conf
fs.aio-max-nr = 1048576
fs.file-max = 6815744
kernel.shmall = 2097152
kernel.shmmax = 8329226240
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
net.ipv4.ip_local_port_range = 9000 65500
net.core.rmem_default = 262144
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048586

# Aplicar os parâmetros sem reiniciar o SO
sudo sysctl -p
sudo sysctl -a

# Definir os limits do Oracle em /etc/security/limits.conf
oracle soft nproc 2047
oracle hard nproc 16384
oracle soft nofile 1024
oracle hard nofile 65536

# Descompactar o arquivo 
sudo unzip V839960-01.zip -d /tmp/stage/

# Criar os diretórios - OFA
sudo mkdir /u01
sudo mkdir /u02
sudo chown -R oracle:oinstall /u01
sudo chown -R oracle:oinstall /u02
sudo chmod -R 775 /u01
sudo chmod -R 775 /u02
sudo chmod g+s /u01
sudo chmod g+s /u02

# Executar o instalador como usuário Oracle
Antes de instalar é importante alterar o usuário para "oracle" criado no item anterior
./tmp/stage/database/runInstaller 

# Configurar o Firewall
sudo firewall-cmd --zone=public --add-port=1521/tcp --add-port=5500/tcp --add-port=5520/tcp --add-port=3938/tcp --permanent
sudo firewall-cmd --zone=public --add-port=7809/tcp --permanent
sudo firewall-cmd --reload

# Se tiver problemas, pare o firewall: sudo systemctl stop firewalld

# Incluir no arquivo .bash_profile (Para usar na máquina PROD)
TMPDIR=$TMP; export TMPDIR
ORACLE_BASE=/u01/app/oracle; export ORACLE_BASE
ORACLE_HOME=$ORACLE_BASE/product/12.2.0/dbhome_2; export ORACLE_HOME
ORACLE_SID=orcl2; export ORACLE_SID
PATH=$ORACLE_HOME/bin:$PATH; export PATH
LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib:/usr/lib64; export LD_LIBRARY_PATH
CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib; export CLASSPATH

# Incluir no arquivo .bash_profile (Para usar na máquina SERV)
TMPDIR=$TMP; export TMPDIR
ORACLE_BASE=/u01/app/oracle; export ORACLE_BASE
ORACLE_HOME=$ORACLE_BASE/product/12.2.0/dbhome_1; export ORACLE_HOME
ORACLE_SID=orcl; export ORACLE_SID
PATH=$ORACLE_HOME/bin:$PATH; export PATH
LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib:/usr/lib64; export LD_LIBRARY_PATH
CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib; export CLASSPATH

# Source no arquivo
source .bash_profile

# Iniciar o Listener
lsnrctl start

# Inicia o banco de dados
sqlplus / as sysdba
startup
shutdown


#Fazer a clonagem da VM, pois usaremos as mesmas configurações.
É necessário alterar o nome da máquina para não ficarem iguais, portante acesse: sudo vi /etc/hostname
Como houve alteração do hostname precisamos atualizar os arquivos de configuração do Oracle Database: /u01/app/oracle/12.2.0/dbhome_1/network/admin/tnsnames.ora e /u01/app/oracle/12.2.0/dbhome_1/network/admin/listener.ora
As máquinas também não podem ter o mesmo MAC adress, portanto é preciso acessar o menu inicial da VM, acessar o menu de Network e fazer o refresh do endereço MAC 


#OGG
# Para instalar o OGG basta baixar o arquivo e seguir o mesmmo passo a passo do banco de dados Oracle fazendo o ./runinstaller dentro do arquivo

Editar o arquivo .bash_profile:
GGH=/u01/app/oracle/product/ogg_src
PATH=$GGH:$PATH; export PATH

Acesse o diretório: /u01/app/oracle/product/ogg_src
Linha de comando do OGG: ./ggsci > start mgr > info all para iniciar o serviço

OBS: É necessário executar o banco de dados Oracle e o OGG nas duas máquinas (Serv e Prod)

#Configurando a replicação: 
#Realizar os comandos abaixo para as duas máquinas:
Acessar a linha de comando do OGG: ./ggsci

Executar o comando: create subdirs (para criação dos diretórios)

start mgr

edit params mgr (parametros do OGG)

edit params ./GLOBALS
CHECKPOINTTABLE ggadmin5.ggcheckpoint

#Definir configurações no banco de dados Oracle:
Acessar o diretório do ggsci  e iniciar o banco de dados Oracle com sqlplus / as sysdba (É importante usar esse diretório para a execução dos catálogos SQL)
Executar os comando abaixo: comandos para ativar os logs, replicação, tablespace, usuário, privilégios e os comandos SQL.

Source:
alter database add supplemental log data;
alter system set enable_goldengate_replication=true scope=both;
create tablespace ggs_data6 datafile '/u01/app/oracle/oradata/orcl2/ggstarget_data06.dbf' size 1024m autoextend on;
create user ggadmin6 identified by ggadmin5 default tablespace ggs_data6 temporary tablespace temp;
grant connect,resource,create session, alter session to ggadmin5;
grant select any dictionary, select any table,create table to ggadmin6;
grant alter any table to ggadmin6;
grant execute on utl_file to ggadmin6;
grant flashback any table to ggadmin6;
grant execute on dbms_flashback to ggadmin6;
@marker_setup.sql
@ddl_setup.sql
@role_setup.sql
@ddl_enable.sql
@sequence.sql


Target
alter database add supplemental log data;
alter system set enable_goldengate_replication=true scope=both;
create tablespace ggs_data6 datafile '/u01/app/oracle/oradata/orcl/ggstarget_data05.dbf' size 1024m autoextend on;
create user ggadmin6 identified by ggadmin6 default tablespace ggs_data6 temporary tablespace temp;
grant connect,resource,create session, alter session to ggadmin5;
grant select any dictionary, select any table,create table to ggadmin6;
grant alter any table to ggadmin5;
grant execute on utl_file to ggadmin5;
grant flashback any table to ggadmin5;
grant execute on dbms_flashback to ggadmin5;
@marker_setup.sql
@ddl_setup.sql
@role_setup.sql
@ddl_enable.sql
@sequence.sql

#Criar o schema da tabela
No prod:
create user appuser4 identified by appuser4 default tablespace users temporary tablespace temp;

grant connect, resource, create session to appuser4; 
grant unlimited tablespace to appuser4;

 CREATE TABLE appuser4.TB_EMP4
 (EMPNO INT,
  ENAME VARCHAR(10),
  JOB VARCHAR(9),
  MGR INT,
  HIREDATE DATE,
  SAL DECIMAL(7,2),
  COMM DECIMAL(7,2),
  DEPTNO INT,
  LAST_UPDT_DT_TM TIMESTAMP DEFAULT current_timestamp);


No Serv:
create user appuser4 identified by appuser4 default tablespace users temporary tablespace temp;

grant connect, resource, create session to appuser4; 
grant unlimited tablespace to appuser4;

 CREATE TABLE appuser4.TB_EMP4
 (EMPNO INT,
  ENAME VARCHAR(10),
  JOB VARCHAR(9),
  MGR INT,
  HIREDATE DATE,
  SAL DECIMAL(7,2),
  COMM DECIMAL(7,2),
  DEPTNO INT,
  LAST_UPDT_DT_TM TIMESTAMP DEFAULT current_timestamp);


#Criando a tabela de checkpoint:
Deve ser criado no banco de destino (Servidor que irá receber os dados replicados)
Acessar o ggsci e conectar com o usuário do banco de dados criado anteriormente (Usuário ggadmin5 e senha ggadmin5)
Para adicionar a tabela no destino execute: add checkpointtable ggadmin5.ggcheckpoint


Para que as máquinas se comuniquem presiar configurar o arquivo tnsnames: /u01/app/oracle/product/12.2.0/dbhome_2/network/admin/tnsnames.ora
#No prod:
TARGET =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = devserver)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orcl2)
    )
  )


#No dev:
SOURCE  =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = dbserver)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orcl2)
    )
  )

Também é necessário configurar o arquivo: sudo vi /etc/hosts (com i endereço IP da máquina que será conectada)

Dessa maneira as máquinas se conectarão via rede e via oracle


#Configurando a extração na fonte:
Source:

dblogin userid ggadmin5

add trandata appuser4.* cols *

Precisa ativar o arhive log par o banco de dados Oracle, para isso execute:
sqlplus / as sysdba
alter database archivelog;
alter database open;

register extract insrc database
add extract insrc, integrated tranlog, begin now
edit params insrc

extract insrc
 SETENV(ORACLE_SID="orcl2")
 SETENV(ORACLE_HOME="/u01/app/oracle/product/12.2.0/dbhome_2")
 USERID ggadmin5, PASSWORD ggadmin5
 TRANLOGOPTIONS IntegratedParams (max_sga_size 256)
 EXTTRAIL ./dirdat/in
 LOGALLSUPCOLS
 UPDATERECORDFORMAT COMPACT
 TABLE appuser3.*;

 add exttrail ./dirdat/in, extract insrc, megabytes 10

 add extract pumpint, exttrailsource ./dirdat/in

 edit params pumpint

 EXTRACT pumpint
 RMTHOST devserver, MGRPORT 7809
 RMTTRAIL ./dirdat/pn
 TABLE appuser3.*;

add rmttrail ./dirdat/pn, extract pumpint, megabytes 10

start extract insrc

start extract pumpint


Target:
edit params repintan

 replicat repintan
 SETENV(ORACLE_SID='orcl')
 DBOPTIONS INTEGRATEDPARAMS(parallelism 4)
 AssumeTargetDefs
 DiscardFile ./dirrpt/rpdw.dsc, purge
 USERID ggadmin5, PASSWORD ggadmin5
 MAP appuser3.*, target appuser3.*;

dblogin userid ggadmin5

add replicat repintan integrated exttrail ./dirdat/pn

start replicat repintan






Execute estes comandos para inserir alguns registros na tabela:
INSERT INTO appuser3.TB_EMP3 VALUES (1006, 'Pele', 'Analista', NULL, NULL, 80000, 250, 90, sysdate);
commit;

INSERT INTO appuser4.TB_EMP4 VALUES (1006, 'Lucas', 'Analista', NULL, NULL, 80000, 250, 90, sysdate);
commit;

INSERT INTO appuser4.TB_EMP4 VALUES (1006, 'Henrique', 'Analista', NULL, NULL, 80000, 250, 90, sysdate);
commit;

Execute o comando abaixo no prod e serv para verificar a replicação:
SELECT COUNT (*) FROM APPUSER4.TB_EMP4;








dbserver (listener.ora)
LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = dbserver)(PORT = 1521))
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )

~        

devserver (listener.ora)
LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = devserver)(PORT = 1521))
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )













********** REPLICAÇÃO ENTRE BANCO DE DADOS RELACIONAL E APACHE HADOOP HDFS - BANCO DE DADOS ORACLE E HADOOP**********

- Ferramentas:

- Passos: 


- Comandos:
Criar VM com Red Hat e executar o primeiro namenode

Verificar lista de prioridades: sudo vi /etc/sudoers e adicionar o usuário aluno na lista junto com o root

Fazer o Download JDK 8, descompactar e mover para a pasta: sudo mv jdk1.8 /opt/jdk
Fazer o Download HADOOP, descompactar e mover para a pasta: sudo mv hadoop /opt/hadoop
Fazer o Download Zookeeper, descompactar e mover para a pasta: sudo mv zookeeper /opt/zookeeper

Ir para a pasta home (~) e editar o arquivo .bash_profile com as variáveis de ambiente:
# Java JDK 1.8
export JAVA_HOME=/opt/jdk
export JRE_HOME=/opt/jdk/jre
export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin

# Hadoop
export HADOOP_HOME=/opt/hadoop
export PATH=$PATH:$HADOOP_HOME/bin

# Zookeeper
export ZOOKEEPER_HOME=opt/zookeeper
export PATH=$PATH:$ZOOKEEPER_HOME/bin

#Criar clone do Namenode para o Secondary e o datanode
Obs: Como estamos clonando, é importante azer o refresh do MAC adress das duas máquinas clonadas. Além disso, a rede precisa estar no modo "Bridge adapter"

Alterar o nome das máquinas:  
sudo vi /etc/hostname (nn1.dsa.com / nn2.dsa.com / dn1.dsa.com)
hostnamectl set-hostname dn1.dsa.com / nn2.dsa.com

Ajustar o arquivo de rede: sudo vi /etc/hosts com o endereço e o hostname de cada máquina
Testar com o comando "ping"

1. Variaveis para arquivo .bashrc
# Incluir as linhas abaixo no arquivo ~/.bashrc em todos os nodes do cluster

export HADOOP_HOME=/opt/hadoop
export HADOOP_MAPRED_HOME=$HADOOP_HOME
export HADOOP_COMMON_HOME=$HADOOP_HOME
export HADOOP_HDFS_HOME=$HADOOP_HOME
export YARN_HOME=$HADOOP_HOME
export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop
export YARN_CONF_DIR=$HADOOP_HOME/etc/hadoop
export JAVA_HOME=/opt/jdk
export ZOOKEEPER_HOME=/opt/zookeeper
export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$ZOOKEEPER_HOME/bin

#Configurandos as chaves ssh sem senha
ssh-keygen -t rsa
Após esse comando é só dar enter, pois queremos a conexão sem senha

Precisar copiar a chaver publica para o diretório authorized_keys em todos os nodes, portanto execute os comando abaixo no namenode:
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
ssh-copy-id -i .ssh/id_rsa.pub aluno@nn2.dsa.com











